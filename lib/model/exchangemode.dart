// To parse this JSON data, do
//
//     final exchangeRate = exchangeRateFromMap(jsonString);

import 'dart:convert';

ExchangeRate exchangeRateFromMap(String str) =>
    ExchangeRate.fromMap(json.decode(str));

String exchangeRateToMap(ExchangeRate data) => json.encode(data.toMap());

class ExchangeRate {
  String result;
  String documentation;
  String termsOfUse;
  int timeLastUpdateUnix;
  String timeLastUpdateUtc;
  int timeNextUpdateUnix;
  String timeNextUpdateUtc;
  String baseCode;
  ConversionRates conversionRates;

  ExchangeRate({
    required this.result,
    required this.documentation,
    required this.termsOfUse,
    required this.timeLastUpdateUnix,
    required this.timeLastUpdateUtc,
    required this.timeNextUpdateUnix,
    required this.timeNextUpdateUtc,
    required this.baseCode,
    required this.conversionRates,
  });

  factory ExchangeRate.fromMap(Map<String, dynamic> json) => ExchangeRate(
        result: json["result"],
        documentation: json["documentation"],
        termsOfUse: json["terms_of_use"],
        timeLastUpdateUnix: json["time_last_update_unix"],
        timeLastUpdateUtc: json["time_last_update_utc"],
        timeNextUpdateUnix: json["time_next_update_unix"],
        timeNextUpdateUtc: json["time_next_update_utc"],
        baseCode: json["base_code"],
        conversionRates: ConversionRates.fromMap(json["conversion_rates"]),
      );

  Map<String, dynamic> toMap() => {
        "result": result,
        "documentation": documentation,
        "terms_of_use": termsOfUse,
        "time_last_update_unix": timeLastUpdateUnix,
        "time_last_update_utc": timeLastUpdateUtc,
        "time_next_update_unix": timeNextUpdateUnix,
        "time_next_update_utc": timeNextUpdateUtc,
        "base_code": baseCode,
        "conversion_rates": conversionRates.toMap(),
      };
}

class ConversionRates {
  int usd;
  double aed;
  double afn;
  double all;
  double amd;
  double ang;
  double aoa;
  double ars;
  double aud;
  double awg;
  double azn;
  double bam;
  int bbd;
  double bdt;
  double bgn;
  double bhd;
  double bif;
  int bmd;
  double bnd;
  double bob;
  double brl;
  int bsd;
  double btn;
  double bwp;
  double byn;
  int bzd;
  double cad;
  double cdf;
  double chf;
  double clp;
  double cny;
  double cop;
  double crc;
  int cup;
  double cve;
  double czk;
  double djf;
  double dkk;
  double dop;
  double dzd;
  double egp;
  int ern;
  double etb;
  double eur;
  double fjd;
  double fkp;
  double fok;
  double gbp;
  double gel;
  double ggp;
  double ghs;
  double gip;
  double gmd;
  double gnf;
  double gtq;
  double gyd;
  double hkd;
  double hnl;
  double hrk;
  double htg;
  double huf;
  double idr;
  double ils;
  double imp;
  double inr;
  double iqd;
  double irr;
  double isk;
  double jep;
  double jmd;
  double jod;
  double jpy;
  double kes;
  double kgs;
  double khr;
  double kid;
  double kmf;
  double krw;
  double kwd;
  double kyd;
  double kzt;
  double lak;
  int lbp;
  double lkr;
  double lrd;
  double lsl;
  double lyd;
  double mad;
  double mdl;
  double mga;
  double mkd;
  double mmk;
  double mnt;
  double mop;
  double mru;
  double mur;
  double mvr;
  double mwk;
  double mxn;
  double myr;
  double mzn;
  double nad;
  double ngn;
  double nio;
  double nok;
  double npr;
  double nzd;
  double omr;
  int pab;
  double pen;
  double pgk;
  double php;
  double pkr;
  double pln;
  double pyg;
  double qar;
  double ron;
  double rsd;
  double rub;
  double rwf;
  double sar;
  double sbd;
  double scr;
  double sdg;
  double sek;
  double sgd;
  double shp;
  double sle;
  double sll;
  double sos;
  double srd;
  double ssp;
  double stn;
  double syp;
  double szl;
  double thb;
  double tjs;
  double tmt;
  double tnd;
  double top;
  double conversionRatesTry;
  double ttd;
  double tvd;
  double twd;
  double tzs;
  double uah;
  double ugx;
  double uyu;
  double uzs;
  double ves;
  double vnd;
  double vuv;
  double wst;
  double xaf;
  double xcd;
  double xdr;
  double xof;
  double xpf;
  double yer;
  double zar;
  double zmw;
  double zwl;

  ConversionRates({
    required this.usd,
    required this.aed,
    required this.afn,
    required this.all,
    required this.amd,
    required this.ang,
    required this.aoa,
    required this.ars,
    required this.aud,
    required this.awg,
    required this.azn,
    required this.bam,
    required this.bbd,
    required this.bdt,
    required this.bgn,
    required this.bhd,
    required this.bif,
    required this.bmd,
    required this.bnd,
    required this.bob,
    required this.brl,
    required this.bsd,
    required this.btn,
    required this.bwp,
    required this.byn,
    required this.bzd,
    required this.cad,
    required this.cdf,
    required this.chf,
    required this.clp,
    required this.cny,
    required this.cop,
    required this.crc,
    required this.cup,
    required this.cve,
    required this.czk,
    required this.djf,
    required this.dkk,
    required this.dop,
    required this.dzd,
    required this.egp,
    required this.ern,
    required this.etb,
    required this.eur,
    required this.fjd,
    required this.fkp,
    required this.fok,
    required this.gbp,
    required this.gel,
    required this.ggp,
    required this.ghs,
    required this.gip,
    required this.gmd,
    required this.gnf,
    required this.gtq,
    required this.gyd,
    required this.hkd,
    required this.hnl,
    required this.hrk,
    required this.htg,
    required this.huf,
    required this.idr,
    required this.ils,
    required this.imp,
    required this.inr,
    required this.iqd,
    required this.irr,
    required this.isk,
    required this.jep,
    required this.jmd,
    required this.jod,
    required this.jpy,
    required this.kes,
    required this.kgs,
    required this.khr,
    required this.kid,
    required this.kmf,
    required this.krw,
    required this.kwd,
    required this.kyd,
    required this.kzt,
    required this.lak,
    required this.lbp,
    required this.lkr,
    required this.lrd,
    required this.lsl,
    required this.lyd,
    required this.mad,
    required this.mdl,
    required this.mga,
    required this.mkd,
    required this.mmk,
    required this.mnt,
    required this.mop,
    required this.mru,
    required this.mur,
    required this.mvr,
    required this.mwk,
    required this.mxn,
    required this.myr,
    required this.mzn,
    required this.nad,
    required this.ngn,
    required this.nio,
    required this.nok,
    required this.npr,
    required this.nzd,
    required this.omr,
    required this.pab,
    required this.pen,
    required this.pgk,
    required this.php,
    required this.pkr,
    required this.pln,
    required this.pyg,
    required this.qar,
    required this.ron,
    required this.rsd,
    required this.rub,
    required this.rwf,
    required this.sar,
    required this.sbd,
    required this.scr,
    required this.sdg,
    required this.sek,
    required this.sgd,
    required this.shp,
    required this.sle,
    required this.sll,
    required this.sos,
    required this.srd,
    required this.ssp,
    required this.stn,
    required this.syp,
    required this.szl,
    required this.thb,
    required this.tjs,
    required this.tmt,
    required this.tnd,
    required this.top,
    required this.conversionRatesTry,
    required this.ttd,
    required this.tvd,
    required this.twd,
    required this.tzs,
    required this.uah,
    required this.ugx,
    required this.uyu,
    required this.uzs,
    required this.ves,
    required this.vnd,
    required this.vuv,
    required this.wst,
    required this.xaf,
    required this.xcd,
    required this.xdr,
    required this.xof,
    required this.xpf,
    required this.yer,
    required this.zar,
    required this.zmw,
    required this.zwl,
  });

  factory ConversionRates.fromMap(Map<String, dynamic> json) => ConversionRates(
        usd: json["USD"],
        aed: json["AED"]?.toDouble(),
        afn: json["AFN"]?.toDouble(),
        all: json["ALL"]?.toDouble(),
        amd: json["AMD"]?.toDouble(),
        ang: json["ANG"]?.toDouble(),
        aoa: json["AOA"]?.toDouble(),
        ars: json["ARS"]?.toDouble(),
        aud: json["AUD"]?.toDouble(),
        awg: json["AWG"]?.toDouble(),
        azn: json["AZN"]?.toDouble(),
        bam: json["BAM"]?.toDouble(),
        bbd: json["BBD"],
        bdt: json["BDT"]?.toDouble(),
        bgn: json["BGN"]?.toDouble(),
        bhd: json["BHD"]?.toDouble(),
        bif: json["BIF"]?.toDouble(),
        bmd: json["BMD"],
        bnd: json["BND"]?.toDouble(),
        bob: json["BOB"]?.toDouble(),
        brl: json["BRL"]?.toDouble(),
        bsd: json["BSD"],
        btn: json["BTN"]?.toDouble(),
        bwp: json["BWP"]?.toDouble(),
        byn: json["BYN"]?.toDouble(),
        bzd: json["BZD"],
        cad: json["CAD"]?.toDouble(),
        cdf: json["CDF"]?.toDouble(),
        chf: json["CHF"]?.toDouble(),
        clp: json["CLP"]?.toDouble(),
        cny: json["CNY"]?.toDouble(),
        cop: json["COP"]?.toDouble(),
        crc: json["CRC"]?.toDouble(),
        cup: json["CUP"],
        cve: json["CVE"]?.toDouble(),
        czk: json["CZK"]?.toDouble(),
        djf: json["DJF"]?.toDouble(),
        dkk: json["DKK"]?.toDouble(),
        dop: json["DOP"]?.toDouble(),
        dzd: json["DZD"]?.toDouble(),
        egp: json["EGP"]?.toDouble(),
        ern: json["ERN"],
        etb: json["ETB"]?.toDouble(),
        eur: json["EUR"]?.toDouble(),
        fjd: json["FJD"]?.toDouble(),
        fkp: json["FKP"]?.toDouble(),
        fok: json["FOK"]?.toDouble(),
        gbp: json["GBP"]?.toDouble(),
        gel: json["GEL"]?.toDouble(),
        ggp: json["GGP"]?.toDouble(),
        ghs: json["GHS"]?.toDouble(),
        gip: json["GIP"]?.toDouble(),
        gmd: json["GMD"]?.toDouble(),
        gnf: json["GNF"]?.toDouble(),
        gtq: json["GTQ"]?.toDouble(),
        gyd: json["GYD"]?.toDouble(),
        hkd: json["HKD"]?.toDouble(),
        hnl: json["HNL"]?.toDouble(),
        hrk: json["HRK"]?.toDouble(),
        htg: json["HTG"]?.toDouble(),
        huf: json["HUF"]?.toDouble(),
        idr: json["IDR"]?.toDouble(),
        ils: json["ILS"]?.toDouble(),
        imp: json["IMP"]?.toDouble(),
        inr: json["INR"]?.toDouble(),
        iqd: json["IQD"]?.toDouble(),
        irr: json["IRR"]?.toDouble(),
        isk: json["ISK"]?.toDouble(),
        jep: json["JEP"]?.toDouble(),
        jmd: json["JMD"]?.toDouble(),
        jod: json["JOD"]?.toDouble(),
        jpy: json["JPY"]?.toDouble(),
        kes: json["KES"]?.toDouble(),
        kgs: json["KGS"]?.toDouble(),
        khr: json["KHR"]?.toDouble(),
        kid: json["KID"]?.toDouble(),
        kmf: json["KMF"]?.toDouble(),
        krw: json["KRW"]?.toDouble(),
        kwd: json["KWD"]?.toDouble(),
        kyd: json["KYD"]?.toDouble(),
        kzt: json["KZT"]?.toDouble(),
        lak: json["LAK"]?.toDouble(),
        lbp: json["LBP"],
        lkr: json["LKR"]?.toDouble(),
        lrd: json["LRD"]?.toDouble(),
        lsl: json["LSL"]?.toDouble(),
        lyd: json["LYD"]?.toDouble(),
        mad: json["MAD"]?.toDouble(),
        mdl: json["MDL"]?.toDouble(),
        mga: json["MGA"]?.toDouble(),
        mkd: json["MKD"]?.toDouble(),
        mmk: json["MMK"]?.toDouble(),
        mnt: json["MNT"]?.toDouble(),
        mop: json["MOP"]?.toDouble(),
        mru: json["MRU"]?.toDouble(),
        mur: json["MUR"]?.toDouble(),
        mvr: json["MVR"]?.toDouble(),
        mwk: json["MWK"]?.toDouble(),
        mxn: json["MXN"]?.toDouble(),
        myr: json["MYR"]?.toDouble(),
        mzn: json["MZN"]?.toDouble(),
        nad: json["NAD"]?.toDouble(),
        ngn: json["NGN"]?.toDouble(),
        nio: json["NIO"]?.toDouble(),
        nok: json["NOK"]?.toDouble(),
        npr: json["NPR"]?.toDouble(),
        nzd: json["NZD"]?.toDouble(),
        omr: json["OMR"]?.toDouble(),
        pab: json["PAB"],
        pen: json["PEN"]?.toDouble(),
        pgk: json["PGK"]?.toDouble(),
        php: json["PHP"]?.toDouble(),
        pkr: json["PKR"]?.toDouble(),
        pln: json["PLN"]?.toDouble(),
        pyg: json["PYG"]?.toDouble(),
        qar: json["QAR"]?.toDouble(),
        ron: json["RON"]?.toDouble(),
        rsd: json["RSD"]?.toDouble(),
        rub: json["RUB"]?.toDouble(),
        rwf: json["RWF"]?.toDouble(),
        sar: json["SAR"]?.toDouble(),
        sbd: json["SBD"]?.toDouble(),
        scr: json["SCR"]?.toDouble(),
        sdg: json["SDG"]?.toDouble(),
        sek: json["SEK"]?.toDouble(),
        sgd: json["SGD"]?.toDouble(),
        shp: json["SHP"]?.toDouble(),
        sle: json["SLE"]?.toDouble(),
        sll: json["SLL"]?.toDouble(),
        sos: json["SOS"]?.toDouble(),
        srd: json["SRD"]?.toDouble(),
        ssp: json["SSP"]?.toDouble(),
        stn: json["STN"]?.toDouble(),
        syp: json["SYP"]?.toDouble(),
        szl: json["SZL"]?.toDouble(),
        thb: json["THB"]?.toDouble(),
        tjs: json["TJS"]?.toDouble(),
        tmt: json["TMT"]?.toDouble(),
        tnd: json["TND"]?.toDouble(),
        top: json["TOP"]?.toDouble(),
        conversionRatesTry: json["TRY"]?.toDouble(),
        ttd: json["TTD"]?.toDouble(),
        tvd: json["TVD"]?.toDouble(),
        twd: json["TWD"]?.toDouble(),
        tzs: json["TZS"]?.toDouble(),
        uah: json["UAH"]?.toDouble(),
        ugx: json["UGX"]?.toDouble(),
        uyu: json["UYU"]?.toDouble(),
        uzs: json["UZS"]?.toDouble(),
        ves: json["VES"]?.toDouble(),
        vnd: json["VND"]?.toDouble(),
        vuv: json["VUV"]?.toDouble(),
        wst: json["WST"]?.toDouble(),
        xaf: json["XAF"]?.toDouble(),
        xcd: json["XCD"]?.toDouble(),
        xdr: json["XDR"]?.toDouble(),
        xof: json["XOF"]?.toDouble(),
        xpf: json["XPF"]?.toDouble(),
        yer: json["YER"]?.toDouble(),
        zar: json["ZAR"]?.toDouble(),
        zmw: json["ZMW"]?.toDouble(),
        zwl: json["ZWL"]?.toDouble(),
      );

  Map<String, dynamic> toMap() => {
        "USD": usd,
        "AED": aed,
        "AFN": afn,
        "ALL": all,
        "AMD": amd,
        "ANG": ang,
        "AOA": aoa,
        "ARS": ars,
        "AUD": aud,
        "AWG": awg,
        "AZN": azn,
        "BAM": bam,
        "BBD": bbd,
        "BDT": bdt,
        "BGN": bgn,
        "BHD": bhd,
        "BIF": bif,
        "BMD": bmd,
        "BND": bnd,
        "BOB": bob,
        "BRL": brl,
        "BSD": bsd,
        "BTN": btn,
        "BWP": bwp,
        "BYN": byn,
        "BZD": bzd,
        "CAD": cad,
        "CDF": cdf,
        "CHF": chf,
        "CLP": clp,
        "CNY": cny,
        "COP": cop,
        "CRC": crc,
        "CUP": cup,
        "CVE": cve,
        "CZK": czk,
        "DJF": djf,
        "DKK": dkk,
        "DOP": dop,
        "DZD": dzd,
        "EGP": egp,
        "ERN": ern,
        "ETB": etb,
        "EUR": eur,
        "FJD": fjd,
        "FKP": fkp,
        "FOK": fok,
        "GBP": gbp,
        "GEL": gel,
        "GGP": ggp,
        "GHS": ghs,
        "GIP": gip,
        "GMD": gmd,
        "GNF": gnf,
        "GTQ": gtq,
        "GYD": gyd,
        "HKD": hkd,
        "HNL": hnl,
        "HRK": hrk,
        "HTG": htg,
        "HUF": huf,
        "IDR": idr,
        "ILS": ils,
        "IMP": imp,
        "INR": inr,
        "IQD": iqd,
        "IRR": irr,
        "ISK": isk,
        "JEP": jep,
        "JMD": jmd,
        "JOD": jod,
        "JPY": jpy,
        "KES": kes,
        "KGS": kgs,
        "KHR": khr,
        "KID": kid,
        "KMF": kmf,
        "KRW": krw,
        "KWD": kwd,
        "KYD": kyd,
        "KZT": kzt,
        "LAK": lak,
        "LBP": lbp,
        "LKR": lkr,
        "LRD": lrd,
        "LSL": lsl,
        "LYD": lyd,
        "MAD": mad,
        "MDL": mdl,
        "MGA": mga,
        "MKD": mkd,
        "MMK": mmk,
        "MNT": mnt,
        "MOP": mop,
        "MRU": mru,
        "MUR": mur,
        "MVR": mvr,
        "MWK": mwk,
        "MXN": mxn,
        "MYR": myr,
        "MZN": mzn,
        "NAD": nad,
        "NGN": ngn,
        "NIO": nio,
        "NOK": nok,
        "NPR": npr,
        "NZD": nzd,
        "OMR": omr,
        "PAB": pab,
        "PEN": pen,
        "PGK": pgk,
        "PHP": php,
        "PKR": pkr,
        "PLN": pln,
        "PYG": pyg,
        "QAR": qar,
        "RON": ron,
        "RSD": rsd,
        "RUB": rub,
        "RWF": rwf,
        "SAR": sar,
        "SBD": sbd,
        "SCR": scr,
        "SDG": sdg,
        "SEK": sek,
        "SGD": sgd,
        "SHP": shp,
        "SLE": sle,
        "SLL": sll,
        "SOS": sos,
        "SRD": srd,
        "SSP": ssp,
        "STN": stn,
        "SYP": syp,
        "SZL": szl,
        "THB": thb,
        "TJS": tjs,
        "TMT": tmt,
        "TND": tnd,
        "TOP": top,
        "TRY": conversionRatesTry,
        "TTD": ttd,
        "TVD": tvd,
        "TWD": twd,
        "TZS": tzs,
        "UAH": uah,
        "UGX": ugx,
        "UYU": uyu,
        "UZS": uzs,
        "VES": ves,
        "VND": vnd,
        "VUV": vuv,
        "WST": wst,
        "XAF": xaf,
        "XCD": xcd,
        "XDR": xdr,
        "XOF": xof,
        "XPF": xpf,
        "YER": yer,
        "ZAR": zar,
        "ZMW": zmw,
        "ZWL": zwl,
      };
}
